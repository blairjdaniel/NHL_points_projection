To Do 
    - complete linear regression for forwards and defense
    - fill in missing salaries of players using the models
    - add a bitly to every page
    - write more tests
    - create recommender engine for filling out the team
    - create streamlit or flask site to pick players

What is the question? How can I build a Moneyball type team.
assumptions, there might be some surprises as to player comparisons. 

Now that I can find the 5 closest players what to do next?

I could create a build your dream team under a cap?
            - each player has a salary that I can build using linear regression

Set the active / inactive for each player

Types of ML
Regression  - find salary
            - predict how many goals a player will get
            - using the bigger dataset, i could find player comparison for older players

How can this be useful for gambling?
            - player predictions for points
            
How can this help an NHL team?
            - Moneyball type team structure roster building

How can this help Hockey Analyist?
            - player comparisons
            - stats from the past reflected for the future 

How could I use API's?
            - salaries
            - the large dataset for older players
            -for the UI, player image and information

UI - What can it do, what will it look like?
            - Page loads
            - scrolldown bars at each location
            - looks like a hockey rink
            - 5 players on ice
            - 1 goalie
            - 15 on bench
            - once a selection is made, 5 comparables will load
                        - make sure you can't pick same player twice
            - each player image, stats show up once clicked
            - each player will have a salary attached to them
                        - use linear regression to fill in the salary compared to recent stats
            - there will be a counter with how much money they spent
            - once they are under the cap and have a full bench, its done 

Build a recommender engine off of my existing recommender engine.  look into how a playter fills a need 


difficulties: rookies, finding salary data

user chooses favourite player at C LW RW D G, then the recommender suggests the rest of the team based off your favourites plus salary remaining

user picks 6 players C LW RW D D G
user gets 30M for team
user picks player one ie, Sidney Crosby at 10M
recommender recommends the best team to fill roster with 20M
user picks player 2 ie, Alex Ovechkin 10M
recommender recommends best team with 10M left
user picks the player, they get the recommened 5 closest players with cap hits
user picks rest of team, gets recommendations at each pick
user submits team

User plays simulation against ai recommended roster of 6 players based off user's first pick
do X amount of simulations

Challenge: Had to scrape active player salaries from capwages.com, had to use requests and 
beautiful soup and create a function to do so. Luckily it was in a table that I could easily 
scrape.
Challenge: Because of limited time, the salary linear regression model does not account for adjusted era considerations, the intention 
is to let the user pick older players as well
Challenge: Matching up player ids with player names across three data sources
Challenge: misspelled name matching between datasets - had to use generated code to figure it out

Sunday - worked on EDA, completed goalie salary linear regression 
    
Monday - worked on EDA, setup first stage of streamlit page

Tuesday - finished
            - make ai team recommeder model
            - implement logic into streamlit

Wednesday - TO Do
            - finish unsupervised simulation and implement it into streamlit
            - if time permits, work on simulation 
                                        - need clean dataset of all players then write script.
                                        - used unsupervised and pca as it had components that I could change weights unlike kmeans

USE ROMAN JOSI AS AN EXAMPLE OF AI MAKING A PERFECT TEAM